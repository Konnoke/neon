// Generated from Neon.g4 by ANTLR 4.0
package com.ncc.neon.language;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class NeonLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__10=1, T__9=2, T__8=3, T__7=4, T__6=5, T__5=6, T__4=7, T__3=8, T__2=9, 
		T__1=10, T__0=11, AND=12, OR=13, ALL_FIELDS=14, GT=15, GTE=16, LT=17, 
		LTE=18, EQ=19, NE=20, USE=21, SELECT=22, FROM=23, WHERE=24, GROUP=25, 
		LIMIT=26, OFFSET=27, SORT=28, SORT_DIRECTION=29, WHOLE_NUMBER=30, NUMBER=31, 
		STRING=32, WHITESPACE=33;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'max'", "'avg'", "'last'", "'sum'", "')'", "','", "'min'", "'('", "'count'", 
		"';'", "'first'", "AND", "OR", "'*'", "'>'", "'>='", "'<'", "'<='", "'='", 
		"'!='", "USE", "SELECT", "FROM", "WHERE", "GROUP", "LIMIT", "OFFSET", 
		"SORT", "SORT_DIRECTION", "WHOLE_NUMBER", "NUMBER", "STRING", "WHITESPACE"
	};
	public static final String[] ruleNames = {
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "AND", "OR", "ALL_FIELDS", "GT", "GTE", "LT", "LTE", "EQ", 
		"NE", "USE", "SELECT", "FROM", "WHERE", "GROUP", "LIMIT", "OFFSET", "SORT", 
		"SORT_DIRECTION", "WHOLE_NUMBER", "NUMBER", "STRING", "DIGIT", "CHAR", 
		"WHITESPACE"
	};


	public NeonLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Neon.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 34: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4#\u0130\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\3\2\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b"+
		"\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\r\3\r\3\r\3\r\3\r\3\r\5\ry\n\r\3\16\3\16\3\16\3\16\5\16\177\n\16"+
		"\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24"+
		"\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\5\26\u0098\n\26\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\5\27\u00a6\n\27\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u00b0\n\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\5\31\u00bc\n\31\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u00ce\n\32"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u00da\n\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\5\34\u00e8\n\34"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\5\35\u00f8\n\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\5\36\u0108\n\36\3\37\3\37\7\37\u010c\n\37\f\37\16\37\u010f"+
		"\13\37\3 \5 \u0112\n \3 \6 \u0115\n \r \16 \u0116\3 \3 \6 \u011b\n \r"+
		" \16 \u011c\5 \u011f\n \3!\6!\u0122\n!\r!\16!\u0123\3\"\3\"\3#\3#\3$\6"+
		"$\u012b\n$\r$\16$\u012c\3$\3$\2%\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1"+
		"\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!"+
		"\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34"+
		"\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C\2\1E\2\1G#\2\3\2\6\3\63;\3\62;\b"+
		"$$/\60\62;C\\aac|\5\13\f\17\17\"\"\u0141\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3"+
		"\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2"+
		"\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35"+
		"\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)"+
		"\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2"+
		"\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2"+
		"A\3\2\2\2\2G\3\2\2\2\3I\3\2\2\2\5M\3\2\2\2\7Q\3\2\2\2\tV\3\2\2\2\13Z\3"+
		"\2\2\2\r\\\3\2\2\2\17^\3\2\2\2\21b\3\2\2\2\23d\3\2\2\2\25j\3\2\2\2\27"+
		"l\3\2\2\2\31x\3\2\2\2\33~\3\2\2\2\35\u0080\3\2\2\2\37\u0082\3\2\2\2!\u0084"+
		"\3\2\2\2#\u0087\3\2\2\2%\u0089\3\2\2\2\'\u008c\3\2\2\2)\u008e\3\2\2\2"+
		"+\u0097\3\2\2\2-\u00a5\3\2\2\2/\u00af\3\2\2\2\61\u00bb\3\2\2\2\63\u00cd"+
		"\3\2\2\2\65\u00d9\3\2\2\2\67\u00e7\3\2\2\29\u00f7\3\2\2\2;\u0107\3\2\2"+
		"\2=\u0109\3\2\2\2?\u0111\3\2\2\2A\u0121\3\2\2\2C\u0125\3\2\2\2E\u0127"+
		"\3\2\2\2G\u012a\3\2\2\2IJ\7o\2\2JK\7c\2\2KL\7z\2\2L\4\3\2\2\2MN\7c\2\2"+
		"NO\7x\2\2OP\7i\2\2P\6\3\2\2\2QR\7n\2\2RS\7c\2\2ST\7u\2\2TU\7v\2\2U\b\3"+
		"\2\2\2VW\7u\2\2WX\7w\2\2XY\7o\2\2Y\n\3\2\2\2Z[\7+\2\2[\f\3\2\2\2\\]\7"+
		".\2\2]\16\3\2\2\2^_\7o\2\2_`\7k\2\2`a\7p\2\2a\20\3\2\2\2bc\7*\2\2c\22"+
		"\3\2\2\2de\7e\2\2ef\7q\2\2fg\7w\2\2gh\7p\2\2hi\7v\2\2i\24\3\2\2\2jk\7"+
		"=\2\2k\26\3\2\2\2lm\7h\2\2mn\7k\2\2no\7t\2\2op\7u\2\2pq\7v\2\2q\30\3\2"+
		"\2\2rs\7C\2\2st\7P\2\2ty\7F\2\2uv\7c\2\2vw\7p\2\2wy\7f\2\2xr\3\2\2\2x"+
		"u\3\2\2\2y\32\3\2\2\2z{\7Q\2\2{\177\7T\2\2|}\7q\2\2}\177\7t\2\2~z\3\2"+
		"\2\2~|\3\2\2\2\177\34\3\2\2\2\u0080\u0081\7,\2\2\u0081\36\3\2\2\2\u0082"+
		"\u0083\7@\2\2\u0083 \3\2\2\2\u0084\u0085\7@\2\2\u0085\u0086\7?\2\2\u0086"+
		"\"\3\2\2\2\u0087\u0088\7>\2\2\u0088$\3\2\2\2\u0089\u008a\7>\2\2\u008a"+
		"\u008b\7?\2\2\u008b&\3\2\2\2\u008c\u008d\7?\2\2\u008d(\3\2\2\2\u008e\u008f"+
		"\7#\2\2\u008f\u0090\7?\2\2\u0090*\3\2\2\2\u0091\u0092\7W\2\2\u0092\u0093"+
		"\7U\2\2\u0093\u0098\7G\2\2\u0094\u0095\7w\2\2\u0095\u0096\7u\2\2\u0096"+
		"\u0098\7g\2\2\u0097\u0091\3\2\2\2\u0097\u0094\3\2\2\2\u0098,\3\2\2\2\u0099"+
		"\u009a\7U\2\2\u009a\u009b\7G\2\2\u009b\u009c\7N\2\2\u009c\u009d\7G\2\2"+
		"\u009d\u009e\7E\2\2\u009e\u00a6\7V\2\2\u009f\u00a0\7u\2\2\u00a0\u00a1"+
		"\7g\2\2\u00a1\u00a2\7n\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7e\2\2\u00a4"+
		"\u00a6\7v\2\2\u00a5\u0099\3\2\2\2\u00a5\u009f\3\2\2\2\u00a6.\3\2\2\2\u00a7"+
		"\u00a8\7H\2\2\u00a8\u00a9\7T\2\2\u00a9\u00aa\7Q\2\2\u00aa\u00b0\7O\2\2"+
		"\u00ab\u00ac\7h\2\2\u00ac\u00ad\7t\2\2\u00ad\u00ae\7q\2\2\u00ae\u00b0"+
		"\7o\2\2\u00af\u00a7\3\2\2\2\u00af\u00ab\3\2\2\2\u00b0\60\3\2\2\2\u00b1"+
		"\u00b2\7Y\2\2\u00b2\u00b3\7J\2\2\u00b3\u00b4\7G\2\2\u00b4\u00b5\7T\2\2"+
		"\u00b5\u00bc\7G\2\2\u00b6\u00b7\7y\2\2\u00b7\u00b8\7j\2\2\u00b8\u00b9"+
		"\7g\2\2\u00b9\u00ba\7t\2\2\u00ba\u00bc\7g\2\2\u00bb\u00b1\3\2\2\2\u00bb"+
		"\u00b6\3\2\2\2\u00bc\62\3\2\2\2\u00bd\u00be\7I\2\2\u00be\u00bf\7T\2\2"+
		"\u00bf\u00c0\7Q\2\2\u00c0\u00c1\7W\2\2\u00c1\u00c2\7R\2\2\u00c2\u00c3"+
		"\7\"\2\2\u00c3\u00c4\7D\2\2\u00c4\u00ce\7[\2\2\u00c5\u00c6\7i\2\2\u00c6"+
		"\u00c7\7t\2\2\u00c7\u00c8\7q\2\2\u00c8\u00c9\7w\2\2\u00c9\u00ca\7r\2\2"+
		"\u00ca\u00cb\7\"\2\2\u00cb\u00cc\7d\2\2\u00cc\u00ce\7{\2\2\u00cd\u00bd"+
		"\3\2\2\2\u00cd\u00c5\3\2\2\2\u00ce\64\3\2\2\2\u00cf\u00d0\7N\2\2\u00d0"+
		"\u00d1\7K\2\2\u00d1\u00d2\7O\2\2\u00d2\u00d3\7K\2\2\u00d3\u00da\7V\2\2"+
		"\u00d4\u00d5\7n\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7o\2\2\u00d7\u00d8"+
		"\7k\2\2\u00d8\u00da\7v\2\2\u00d9\u00cf\3\2\2\2\u00d9\u00d4\3\2\2\2\u00da"+
		"\66\3\2\2\2\u00db\u00dc\7Q\2\2\u00dc\u00dd\7H\2\2\u00dd\u00de\7H\2\2\u00de"+
		"\u00df\7U\2\2\u00df\u00e0\7G\2\2\u00e0\u00e8\7V\2\2\u00e1\u00e2\7q\2\2"+
		"\u00e2\u00e3\7h\2\2\u00e3\u00e4\7h\2\2\u00e4\u00e5\7u\2\2\u00e5\u00e6"+
		"\7g\2\2\u00e6\u00e8\7v\2\2\u00e7\u00db\3\2\2\2\u00e7\u00e1\3\2\2\2\u00e8"+
		"8\3\2\2\2\u00e9\u00ea\7U\2\2\u00ea\u00eb\7Q\2\2\u00eb\u00ec\7T\2\2\u00ec"+
		"\u00ed\7V\2\2\u00ed\u00ee\7\"\2\2\u00ee\u00ef\7D\2\2\u00ef\u00f8\7[\2"+
		"\2\u00f0\u00f1\7u\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3\7t\2\2\u00f3\u00f4"+
		"\7v\2\2\u00f4\u00f5\7\"\2\2\u00f5\u00f6\7d\2\2\u00f6\u00f8\7{\2\2\u00f7"+
		"\u00e9\3\2\2\2\u00f7\u00f0\3\2\2\2\u00f8:\3\2\2\2\u00f9\u00fa\7C\2\2\u00fa"+
		"\u00fb\7U\2\2\u00fb\u0108\7E\2\2\u00fc\u00fd\7c\2\2\u00fd\u00fe\7u\2\2"+
		"\u00fe\u0108\7e\2\2\u00ff\u0100\7F\2\2\u0100\u0101\7G\2\2\u0101\u0102"+
		"\7U\2\2\u0102\u0108\7E\2\2\u0103\u0104\7f\2\2\u0104\u0105\7g\2\2\u0105"+
		"\u0106\7u\2\2\u0106\u0108\7e\2\2\u0107\u00f9\3\2\2\2\u0107\u00fc\3\2\2"+
		"\2\u0107\u00ff\3\2\2\2\u0107\u0103\3\2\2\2\u0108<\3\2\2\2\u0109\u010d"+
		"\t\2\2\2\u010a\u010c\5C\"\2\u010b\u010a\3\2\2\2\u010c\u010f\3\2\2\2\u010d"+
		"\u010b\3\2\2\2\u010d\u010e\3\2\2\2\u010e>\3\2\2\2\u010f\u010d\3\2\2\2"+
		"\u0110\u0112\7/\2\2\u0111\u0110\3\2\2\2\u0111\u0112\3\2\2\2\u0112\u0114"+
		"\3\2\2\2\u0113\u0115\5C\"\2\u0114\u0113\3\2\2\2\u0115\u0116\3\2\2\2\u0116"+
		"\u0114\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u011e\3\2\2\2\u0118\u011a\7\60"+
		"\2\2\u0119\u011b\5C\"\2\u011a\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011c"+
		"\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u011f\3\2\2\2\u011e\u0118\3\2"+
		"\2\2\u011e\u011f\3\2\2\2\u011f@\3\2\2\2\u0120\u0122\5E#\2\u0121\u0120"+
		"\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124"+
		"B\3\2\2\2\u0125\u0126\t\3\2\2\u0126D\3\2\2\2\u0127\u0128\t\4\2\2\u0128"+
		"F\3\2\2\2\u0129\u012b\t\5\2\2\u012a\u0129\3\2\2\2\u012b\u012c\3\2\2\2"+
		"\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012f"+
		"\b$\2\2\u012fH\3\2\2\2\25\2x~\u0097\u00a5\u00af\u00bb\u00cd\u00d9\u00e7"+
		"\u00f7\u0107\u010d\u0111\u0116\u011c\u011e\u0123\u012c";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}