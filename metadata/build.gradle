/*
 * Copyright 2013 Next Century Corporation
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "${rootDir}/gradle/groovy.gradle"
apply from: "${rootDir}/gradle/sharedDependencies.gradle"

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-context:$springVersion"
    compile "org.codehaus.jackson:jackson-core-asl:1.9.2"
}

task generateMongoDatabaseMetadata(type: org.gradle.api.tasks.JavaExec) {
    description = "Runs a script to generate metadata for a mongo database/collection"
    main = "com.ncc.neon.metadata.store.script.MongoColumnMetadataScript"
    args = [checkAndGetProperty("metadataDatabase"),
            checkAndGetProperty("metadataTable"),
            checkAndGetProperty("metadataOutputFile"),
            checkAndGetProperty("metadataHost"),
            checkAndGetProperty("metadataPort")].findAll()
    classpath = sourceSets.main.runtimeClasspath
}

private String checkAndGetProperty(String property) {
    return project.hasProperty(property) ? project.getProperty(property) : null
}